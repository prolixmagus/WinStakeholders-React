{"ast":null,"code":"var _jsxFileName = \"/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js\",\n  _s = $RefreshSig$();\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n\n// import { useEffect } from 'react';\n// import './winCalendar.css';\n// import { Calendar } from '@fullcalendar/core';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import listPlugin from '@fullcalendar/list';\n// import googleCalendarPlugin from '@fullcalendar/google-calendar';\n\n// const googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// // Obtain Google Calendar ID from Google Calendar Settings\n// const JUN_CohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\n// const JUL_CohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\n// const AUG_CohortId = 'c_d03dbf2cf6a04124e760ddbb3af9128c1e1b6e42c8ad4f53ada4e9b7808aba2f@group.calendar.google.com';\n// const SEP_CohortId = 'c_d7a7143c2a40c09aefe2caf30e0bda03330bf518b579adbc616e65c1a6234884@group.calendar.google.com';\n\n// function WinCalendar() {\n//   useEffect(() => {\n//     const calendarEl = document.getElementById('calendar');\n\n//     const calendar = new Calendar(calendarEl, {\n//         plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n\n//         initialView: 'listYear', // can use 'listYear' to show schedule per Year,\n\n//         headerToolbar: {\n//             left: '',\n//             center: 'title',\n//             right: '',\n//         },\n\n//         titleFormat: () => {\n//             return 'September 4, 2024 – December 11, 2024';\n//         },\n\n//         validRange: {\n//             start: '2024-01-01', \n//             end: '2025-01-01'\n//         },\n\n//         googleCalendarApiKey: googleCalendarApiKey,\n//         eventSources: [\n//             // {\n//             //     googleCalendarId: JUN_CohortId,\n//             //     className: 'June Cohort',\n//             // },\n//             // {\n//             //     googleCalendarId: JUL_CohortId,\n//             //     className: 'July Cohort',\n//             // },\n//             // {\n//             //     googleCalendarId: JUL_CohortId,\n//             //     className: 'August Cohort',\n//             // },\n//             {\n//                 googleCalendarId: SEP_CohortId,\n//                 className: 'September Cohort',\n//             },\n//         ],\n//         eventColor: 'red',\n\n//     });\n\n//     calendar.render(); // Render the calendar when the component mounts\n\n//     return () => {\n//       calendar.destroy(); // Clean up the calendar when the component unmounts\n//     };\n//   }, []);\n\n//   return (\n//     <div id=\"winCalendar\">\n//       <div id=\"calendar\"></div>\n//     </div>\n//   );\n// }\n\n// export default WinCalendar;\n\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n\nimport './winCalendar.css';\nimport React, { useState, useEffect } from 'react';\nimport { fetchClasses } from './airTable/Airtable.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinCalendar() {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [activeClass, setActiveClass] = useState(null); // To track which class is clicked for the dropdown\n\n  useEffect(() => {\n    const getClasses = async () => {\n      const data = await fetchClasses();\n      setClasses(data);\n    };\n    getClasses();\n  }, []);\n\n  // Function to toggle the active class details view\n  const toggleClassDetails = id => {\n    setActiveClass(activeClass === id ? null : id);\n  };\n\n  // Helper to group classes by date\n  const groupByDate = data => {\n    return data.reduce((acc, record) => {\n      const date = record.fields.Date;\n      if (!acc[date]) acc[date] = [];\n      acc[date].push(record);\n      return acc;\n    }, {});\n  };\n  const groupedClasses = groupByDate(classes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: Object.keys(groupedClasses).map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-day\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), groupedClasses[date].map(classItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-title\",\n          onClick: () => toggleClassDetails(classItem.id),\n          children: [classItem.fields.ClassTitle, \" - \", classItem.fields.Time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), activeClass === classItem.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: classItem.fields.ClassDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, classItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this))]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(WinCalendar, \"zLDDLmuwLq7HJDZ9z55SRN0RMsc=\");\n_c = WinCalendar;\nexport default WinCalendar;\nvar _c;\n$RefreshReg$(_c, \"WinCalendar\");","map":{"version":3,"names":["React","useState","useEffect","fetchClasses","jsxDEV","_jsxDEV","WinCalendar","_s","classes","setClasses","activeClass","setActiveClass","getClasses","data","toggleClassDetails","id","groupByDate","reduce","acc","record","date","fields","Date","push","groupedClasses","className","children","Object","keys","map","fileName","_jsxFileName","lineNumber","columnNumber","classItem","onClick","ClassTitle","Time","ClassDetail","_c","$RefreshReg$"],"sources":["/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js"],"sourcesContent":["// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n\n// import { useEffect } from 'react';\n// import './winCalendar.css';\n// import { Calendar } from '@fullcalendar/core';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import listPlugin from '@fullcalendar/list';\n// import googleCalendarPlugin from '@fullcalendar/google-calendar';\n\n// const googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// // Obtain Google Calendar ID from Google Calendar Settings\n// const JUN_CohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\n// const JUL_CohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\n// const AUG_CohortId = 'c_d03dbf2cf6a04124e760ddbb3af9128c1e1b6e42c8ad4f53ada4e9b7808aba2f@group.calendar.google.com';\n// const SEP_CohortId = 'c_d7a7143c2a40c09aefe2caf30e0bda03330bf518b579adbc616e65c1a6234884@group.calendar.google.com';\n\n// function WinCalendar() {\n//   useEffect(() => {\n//     const calendarEl = document.getElementById('calendar');\n    \n//     const calendar = new Calendar(calendarEl, {\n//         plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n\n//         initialView: 'listYear', // can use 'listYear' to show schedule per Year,\n    \n//         headerToolbar: {\n//             left: '',\n//             center: 'title',\n//             right: '',\n//         },\n\n//         titleFormat: () => {\n//             return 'September 4, 2024 – December 11, 2024';\n//         },\n\n//         validRange: {\n//             start: '2024-01-01', \n//             end: '2025-01-01'\n//         },\n\n//         googleCalendarApiKey: googleCalendarApiKey,\n//         eventSources: [\n//             // {\n//             //     googleCalendarId: JUN_CohortId,\n//             //     className: 'June Cohort',\n//             // },\n//             // {\n//             //     googleCalendarId: JUL_CohortId,\n//             //     className: 'July Cohort',\n//             // },\n//             // {\n//             //     googleCalendarId: JUL_CohortId,\n//             //     className: 'August Cohort',\n//             // },\n//             {\n//                 googleCalendarId: SEP_CohortId,\n//                 className: 'September Cohort',\n//             },\n//         ],\n//         eventColor: 'red',\n\n//     });\n    \n//     calendar.render(); // Render the calendar when the component mounts\n    \n//     return () => {\n//       calendar.destroy(); // Clean up the calendar when the component unmounts\n//     };\n//   }, []);\n\n//   return (\n//     <div id=\"winCalendar\">\n//       <div id=\"calendar\"></div>\n//     </div>\n//   );\n// }\n\n// export default WinCalendar;\n\n\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n// // OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //// OLD BUILD //\n\n\nimport './winCalendar.css';\nimport React, { useState, useEffect } from 'react';\nimport { fetchClasses } from './airTable/Airtable.js';\n\nfunction WinCalendar() {\n  const [classes, setClasses] = useState([]);\n  const [activeClass, setActiveClass] = useState(null); // To track which class is clicked for the dropdown\n\n  useEffect(() => {\n    const getClasses = async () => {\n      const data = await fetchClasses();\n      setClasses(data);\n    };\n    getClasses();\n  }, []);\n\n  // Function to toggle the active class details view\n  const toggleClassDetails = (id) => {\n    setActiveClass(activeClass === id ? null : id);\n  };\n\n  // Helper to group classes by date\n  const groupByDate = (data) => {\n    return data.reduce((acc, record) => {\n      const date = record.fields.Date;\n      if (!acc[date]) acc[date] = [];\n      acc[date].push(record);\n      return acc;\n    }, {});\n  };\n\n  const groupedClasses = groupByDate(classes);\n\n  return (\n    <div className=\"calendar\">\n      {Object.keys(groupedClasses).map((date) => (\n        <div key={date} className=\"calendar-day\">\n          <h2>{date}</h2>\n          {groupedClasses[date].map((classItem) => (\n            <div key={classItem.id} className=\"class-item\">\n              <div className=\"class-title\" onClick={() => toggleClassDetails(classItem.id)}>\n                {classItem.fields.ClassTitle} - {classItem.fields.Time}\n              </div>\n              {activeClass === classItem.id && (\n                <div className=\"class-details\">\n                  <p>{classItem.fields.ClassDetail}</p>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default WinCalendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}