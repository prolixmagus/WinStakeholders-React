{"ast":null,"code":"var _jsxFileName = \"/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// Obtain Google Calendar ID from Google Calendar Settings\nconst googleCalendarId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\nfunction WinCalendar() {\n  _s();\n  useEffect(() => {\n    const calendarEl = document.getElementById('calendar');\n    const calendar = new Calendar(calendarEl, {\n      headerToolbar: {\n        left: 'prev next today',\n        center: 'title',\n        right: 'listYear dayGridMonth'\n      },\n      footerToolbar: {\n        center: 'false'\n      },\n      titleFormat: {},\n      plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n      initialView: 'listYear',\n      // can use 'listYear' to show schedule per Year,\n\n      googleCalendarApiKey: googleCalendarApiKey,\n      events: {\n        googleCalendarId: googleCalendarId\n      }\n    });\n    calendar.render(); // Render the calendar when the component mounts\n\n    return () => {\n      calendar.destroy(); // Clean up the calendar when the component unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"winCalendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(WinCalendar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WinCalendar;\nexport default WinCalendar;\nvar _c;\n$RefreshReg$(_c, \"WinCalendar\");","map":{"version":3,"names":["useEffect","Calendar","dayGridPlugin","listPlugin","googleCalendarPlugin","jsxDEV","_jsxDEV","googleCalendarApiKey","googleCalendarId","WinCalendar","_s","calendarEl","document","getElementById","calendar","headerToolbar","left","center","right","footerToolbar","titleFormat","plugins","initialView","events","render","destroy","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js"],"sourcesContent":["import { useEffect } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\n\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// Obtain Google Calendar ID from Google Calendar Settings\nconst googleCalendarId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\n\nfunction WinCalendar() {\n  useEffect(() => {\n    const calendarEl = document.getElementById('calendar');\n    \n    const calendar = new Calendar(calendarEl, {\n        headerToolbar: {\n            left: 'prev next today',\n            center: 'title',\n            right: 'listYear dayGridMonth'\n        },\n\n        footerToolbar: {\n            center: 'false'\n        },\n\n        titleFormat: {\n\n        },\n\n        plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n\n        initialView: 'listYear', // can use 'listYear' to show schedule per Year,\n\n\n\n        googleCalendarApiKey: googleCalendarApiKey,\n        events: {googleCalendarId: googleCalendarId}\n    });\n    \n    calendar.render(); // Render the calendar when the component mounts\n    \n    return () => {\n      calendar.destroy(); // Clean up the calendar when the component unmounts\n    };\n  }, []);\n\n  return (\n    <div className=\"winCalendar\">\n      <div id=\"calendar\"></div>\n    </div>\n  );\n}\n\nexport default WinCalendar;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,mBAAmB;AAC1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,oBAAoB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,oBAAoB,GAAG,yCAAyC;;AAEtE;AACA,MAAMC,gBAAgB,GAAG,8FAA8F;AAEvH,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrBV,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAEtD,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACU,UAAU,EAAE;MACtCI,aAAa,EAAE;QACXC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACX,CAAC;MAEDC,aAAa,EAAE;QACXF,MAAM,EAAE;MACZ,CAAC;MAEDG,WAAW,EAAE,CAEb,CAAC;MAEDC,OAAO,EAAE,CAACnB,aAAa,EAAEE,oBAAoB,EAAED,UAAU,CAAC;MAE1DmB,WAAW,EAAE,UAAU;MAAE;;MAIzBf,oBAAoB,EAAEA,oBAAoB;MAC1CgB,MAAM,EAAE;QAACf,gBAAgB,EAAEA;MAAgB;IAC/C,CAAC,CAAC;IAEFM,QAAQ,CAACU,MAAM,EAAE,CAAC,CAAC;;IAEnB,OAAO,MAAM;MACXV,QAAQ,CAACW,OAAO,EAAE,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BrB,OAAA;MAAKsB,EAAE,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEV;AAACtB,EAAA,CAzCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}