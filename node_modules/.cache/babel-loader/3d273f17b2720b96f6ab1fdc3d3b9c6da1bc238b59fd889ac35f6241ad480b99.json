{"ast":null,"code":"var _jsxFileName = \"/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import './winCalendar.css';\n// import { Calendar } from '@fullcalendar/core';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import googleCalendarPlugin from '@fullcalendar/google-calendar';\n// import listPlugin from '@fullcalendar/list';\n\n// const googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n// const juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\n// const julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\n\n// function WinCalendar() {\n//   const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n\n//   useEffect(() => {\n//     const calendarEl = document.getElementById('calendar');\n\n//     const calendar = new Calendar(calendarEl, {\n//       plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n//       initialView: 'listYear',\n\n//       headerToolbar: {\n//         left: 'prev next today',\n//         center: 'title',\n//         right: 'listYear dayGridMonth',\n//       },\n\n//       titleFormat: () => {\n//         return 'June 12, 2024 – October 22, 2024';\n//       },\n\n//       validRange: {\n//         start: '2024-06-01',\n//         end: '2024-11-01',\n//       },\n\n//       googleCalendarApiKey: googleCalendarApiKey,\n\n//       eventSources: [\n//         {\n//           googleCalendarId: selectedCohort, // Use the selected cohort\n//           className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort',\n//         },\n//       ],\n//     });\n\n//     calendar.render(); // Render the calendar when the component mounts\n\n//     return () => {\n//       calendar.destroy(); // Clean up the calendar when the component unmounts\n//     };\n//   }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n\n//   return (\n//     <div className=\"winCalendar\">\n//       {/* Dropdown for selecting the cohort */}\n//       <select\n//         value={selectedCohort}\n//         onChange={(e) => setSelectedCohort(e.target.value)} // Update state when selecting a different cohort\n//       >\n//         <option value={juneCohortId}>June Cohort</option>\n//         <option value={julyCohortId}>July Cohort</option>\n//       </select>\n\n//       <div id=\"calendar\"></div>\n//     </div>\n//   );\n// }\n\n// export default WinCalendar;\n\nimport { useEffect, useState } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\nimport listPlugin from '@fullcalendar/list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\nconst juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\nconst julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\nconst AUG_CohortId = 'c_d03dbf2cf6a04124e760ddbb3af9128c1e1b6e42c8ad4f53ada4e9b7808aba2f@group.calendar.google.com';\nconst SEP_CohortId = 'c_d7a7143c2a40c09aefe2caf30e0bda03330bf518b579adbc616e65c1a6234884@group.calendar.google.com';\nconst cohortDates = {\n  [juneCohortId]: {\n    start: 'June 12, 2024',\n    end: 'October 22, 2024'\n  },\n  [julyCohortId]: {\n    start: 'July 5, 2024',\n    end: 'November 15, 2024'\n  }\n};\nfunction WinCalendar() {\n  _s();\n  const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n\n  useEffect(() => {\n    const calendarEl = document.getElementById('calendar');\n    const calendar = new Calendar(calendarEl, {\n      plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n      initialView: 'listYear',\n      headerToolbar: {\n        left: 'prev next today',\n        center: 'title',\n        right: 'listYear dayGridMonth'\n      },\n      // Dynamically set the title based on the selected cohort's dates\n      titleFormat: () => {\n        const dates = cohortDates[selectedCohort];\n        return `${dates.start} – ${dates.end}`;\n      },\n      googleCalendarApiKey: googleCalendarApiKey,\n      eventSources: [{\n        googleCalendarId: selectedCohort,\n        // Use the selected cohort\n        className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort'\n      }]\n    });\n    calendar.render(); // Render the calendar when the component mounts\n\n    return () => {\n      calendar.destroy(); // Clean up the calendar when the component unmounts\n    };\n  }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"winCalendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCohort,\n      onChange: e => setSelectedCohort(e.target.value) // Update state when selecting a different cohort\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: juneCohortId,\n        children: \"June Cohort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: julyCohortId,\n        children: \"July Cohort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(WinCalendar, \"xbzAh+1lxm+tzby8PSLLDsLTgF4=\");\n_c = WinCalendar;\nexport default WinCalendar;\nvar _c;\n$RefreshReg$(_c, \"WinCalendar\");","map":{"version":3,"names":["useEffect","useState","Calendar","dayGridPlugin","googleCalendarPlugin","listPlugin","jsxDEV","_jsxDEV","googleCalendarApiKey","juneCohortId","julyCohortId","AUG_CohortId","SEP_CohortId","cohortDates","start","end","WinCalendar","_s","selectedCohort","setSelectedCohort","calendarEl","document","getElementById","calendar","plugins","initialView","headerToolbar","left","center","right","titleFormat","dates","eventSources","googleCalendarId","className","render","destroy","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\n// import './winCalendar.css';\n// import { Calendar } from '@fullcalendar/core';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import googleCalendarPlugin from '@fullcalendar/google-calendar';\n// import listPlugin from '@fullcalendar/list';\n\n// const googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n// const juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\n// const julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\n\n// function WinCalendar() {\n//   const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n\n//   useEffect(() => {\n//     const calendarEl = document.getElementById('calendar');\n    \n//     const calendar = new Calendar(calendarEl, {\n//       plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n//       initialView: 'listYear',\n\n//       headerToolbar: {\n//         left: 'prev next today',\n//         center: 'title',\n//         right: 'listYear dayGridMonth',\n//       },\n\n//       titleFormat: () => {\n//         return 'June 12, 2024 – October 22, 2024';\n//       },\n\n//       validRange: {\n//         start: '2024-06-01',\n//         end: '2024-11-01',\n//       },\n\n//       googleCalendarApiKey: googleCalendarApiKey,\n\n//       eventSources: [\n//         {\n//           googleCalendarId: selectedCohort, // Use the selected cohort\n//           className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort',\n//         },\n//       ],\n//     });\n\n//     calendar.render(); // Render the calendar when the component mounts\n\n//     return () => {\n//       calendar.destroy(); // Clean up the calendar when the component unmounts\n//     };\n//   }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n\n//   return (\n//     <div className=\"winCalendar\">\n//       {/* Dropdown for selecting the cohort */}\n//       <select\n//         value={selectedCohort}\n//         onChange={(e) => setSelectedCohort(e.target.value)} // Update state when selecting a different cohort\n//       >\n//         <option value={juneCohortId}>June Cohort</option>\n//         <option value={julyCohortId}>July Cohort</option>\n//       </select>\n\n//       <div id=\"calendar\"></div>\n//     </div>\n//   );\n// }\n\n// export default WinCalendar;\n\nimport { useEffect, useState } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\nimport listPlugin from '@fullcalendar/list';\n\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\nconst juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\nconst julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\nconst AUG_CohortId = 'c_d03dbf2cf6a04124e760ddbb3af9128c1e1b6e42c8ad4f53ada4e9b7808aba2f@group.calendar.google.com';\nconst SEP_CohortId = 'c_d7a7143c2a40c09aefe2caf30e0bda03330bf518b579adbc616e65c1a6234884@group.calendar.google.com';\n\nconst cohortDates = {\n  [juneCohortId]: { start: 'June 12, 2024', end: 'October 22, 2024' },\n  [julyCohortId]: { start: 'July 5, 2024', end: 'November 15, 2024' },\n};\n\nfunction WinCalendar() {\n  const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n\n  useEffect(() => {\n    const calendarEl = document.getElementById('calendar');\n    \n    const calendar = new Calendar(calendarEl, {\n      plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n      initialView: 'listYear',\n\n      headerToolbar: {\n        left: 'prev next today',\n        center: 'title',\n        right: 'listYear dayGridMonth',\n      },\n\n      // Dynamically set the title based on the selected cohort's dates\n      titleFormat: () => {\n        const dates = cohortDates[selectedCohort];\n        return `${dates.start} – ${dates.end}`;\n      },\n\n      googleCalendarApiKey: googleCalendarApiKey,\n\n      eventSources: [\n        {\n          googleCalendarId: selectedCohort, // Use the selected cohort\n          className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort',\n        },\n      ],\n    });\n\n    calendar.render(); // Render the calendar when the component mounts\n\n    return () => {\n      calendar.destroy(); // Clean up the calendar when the component unmounts\n    };\n  }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n\n  return (\n    <div className=\"winCalendar\">\n      {/* Dropdown for selecting the cohort */}\n      <select\n        value={selectedCohort}\n        onChange={(e) => setSelectedCohort(e.target.value)} // Update state when selecting a different cohort\n      >\n        <option value={juneCohortId}>June Cohort</option>\n        <option value={julyCohortId}>July Cohort</option>\n      </select>\n\n      <div id=\"calendar\"></div>\n    </div>\n  );\n}\n\nexport default WinCalendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}