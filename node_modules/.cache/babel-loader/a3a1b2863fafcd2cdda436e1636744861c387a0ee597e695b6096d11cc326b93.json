{"ast":null,"code":"var _jsxFileName = \"/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// Obtain Google Calendar ID from Google Calendar Settings\nconst juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\nconst julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\nfunction WinCalendar() {\n  _s();\n  const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n\n  useEffect(() => {\n    const calendarEl = document.getElementById('calendar');\n    const calendar = new Calendar(calendarEl, {\n      plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n      initialView: 'listYear',\n      headerToolbar: {\n        left: 'prev next today',\n        center: 'title',\n        right: 'listYear dayGridMonth'\n      },\n      titleFormat: () => {\n        return 'June 12, 2024 – October 22, 2024';\n      },\n      validRange: {\n        start: '2024-06-01',\n        end: '2024-11-01'\n      },\n      googleCalendarApiKey: googleCalendarApiKey,\n      eventSources: [{\n        googleCalendarId: selectedCohort,\n        // Use the selected cohort\n        className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort'\n      }]\n    });\n    calendar.render(); // Render the calendar when the component mounts\n\n    return () => {\n      calendar.destroy(); // Clean up the calendar when the component unmounts\n    };\n  }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"winCalendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCohort,\n      onChange: e => setSelectedCohort(e.target.value) // Update state when selecting a different cohort\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: juneCohortId,\n        children: \"June Cohort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: julyCohortId,\n        children: \"July Cohort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n_s(WinCalendar, \"xbzAh+1lxm+tzby8PSLLDsLTgF4=\");\n_c = WinCalendar;\nexport default WinCalendar;\nvar _c;\n$RefreshReg$(_c, \"WinCalendar\");","map":{"version":3,"names":["useEffect","Calendar","dayGridPlugin","listPlugin","googleCalendarPlugin","jsxDEV","_jsxDEV","googleCalendarApiKey","juneCohortId","julyCohortId","WinCalendar","_s","selectedCohort","setSelectedCohort","useState","calendarEl","document","getElementById","calendar","plugins","initialView","headerToolbar","left","center","right","titleFormat","validRange","start","end","eventSources","googleCalendarId","className","render","destroy","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/maxhsu/Desktop/CenterCentre/React_FC_win_calendar/src/components/winCalendar/winCalendar.js"],"sourcesContent":["import { useEffect } from 'react';\nimport './winCalendar.css';\nimport { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\n\nconst googleCalendarApiKey = 'AIzaSyCNuPc8INoIhejkZ0ZpBgqxMMubNbs7Twc';\n\n// Obtain Google Calendar ID from Google Calendar Settings\nconst juneCohortId = 'c_da135cf666ae629bc8c39bfbe7a099540d70593c448d73a9fec7cd8c3578e4ba@group.calendar.google.com';\nconst julyCohortId = 'c_56ec5181422e91d15aeb51914a84ebfdfc8129ed04652867d24f67feadf3bb87@group.calendar.google.com';\n\nfunction WinCalendar() {\n    const [selectedCohort, setSelectedCohort] = useState(juneCohortId); // Default to June Cohort\n  \n    useEffect(() => {\n      const calendarEl = document.getElementById('calendar');\n      \n      const calendar = new Calendar(calendarEl, {\n        plugins: [dayGridPlugin, googleCalendarPlugin, listPlugin],\n        initialView: 'listYear',\n  \n        headerToolbar: {\n          left: 'prev next today',\n          center: 'title',\n          right: 'listYear dayGridMonth',\n        },\n  \n        titleFormat: () => {\n          return 'June 12, 2024 – October 22, 2024';\n        },\n  \n        validRange: {\n          start: '2024-06-01',\n          end: '2024-11-01',\n        },\n  \n        googleCalendarApiKey: googleCalendarApiKey,\n  \n        eventSources: [\n          {\n            googleCalendarId: selectedCohort, // Use the selected cohort\n            className: selectedCohort === juneCohortId ? 'June Cohort' : 'July Cohort',\n          },\n        ],\n      });\n  \n      calendar.render(); // Render the calendar when the component mounts\n  \n      return () => {\n        calendar.destroy(); // Clean up the calendar when the component unmounts\n      };\n    }, [selectedCohort]); // Re-run the effect when the selected cohort changes\n  \n    return (\n      <div className=\"winCalendar\">\n        {/* Dropdown for selecting the cohort */}\n        <select\n          value={selectedCohort}\n          onChange={(e) => setSelectedCohort(e.target.value)} // Update state when selecting a different cohort\n        >\n          <option value={juneCohortId}>June Cohort</option>\n          <option value={julyCohortId}>July Cohort</option>\n        </select>\n  \n        <div id=\"calendar\"></div>\n      </div>\n    );\n  }\n  \n  export default WinCalendar;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,mBAAmB;AAC1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,oBAAoB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,oBAAoB,GAAG,yCAAyC;;AAEtE;AACA,MAAMC,YAAY,GAAG,8FAA8F;AACnH,MAAMC,YAAY,GAAG,8FAA8F;AAEnH,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAACN,YAAY,CAAC,CAAC,CAAC;;EAEpER,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAEtD,MAAMC,QAAQ,GAAG,IAAIjB,QAAQ,CAACc,UAAU,EAAE;MACxCI,OAAO,EAAE,CAACjB,aAAa,EAAEE,oBAAoB,EAAED,UAAU,CAAC;MAC1DiB,WAAW,EAAE,UAAU;MAEvBC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAC;MAEDC,WAAW,EAAEA,CAAA,KAAM;QACjB,OAAO,kCAAkC;MAC3C,CAAC;MAEDC,UAAU,EAAE;QACVC,KAAK,EAAE,YAAY;QACnBC,GAAG,EAAE;MACP,CAAC;MAEDrB,oBAAoB,EAAEA,oBAAoB;MAE1CsB,YAAY,EAAE,CACZ;QACEC,gBAAgB,EAAElB,cAAc;QAAE;QAClCmB,SAAS,EAAEnB,cAAc,KAAKJ,YAAY,GAAG,aAAa,GAAG;MAC/D,CAAC;IAEL,CAAC,CAAC;IAEFU,QAAQ,CAACc,MAAM,EAAE,CAAC,CAAC;;IAEnB,OAAO,MAAM;MACXd,QAAQ,CAACe,OAAO,EAAE,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACrB,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEN,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAG,QAAA,gBAE1B5B,OAAA;MACE6B,KAAK,EAAEvB,cAAe;MACtBwB,QAAQ,EAAGC,CAAC,IAAKxB,iBAAiB,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAAAD,QAAA,gBAEpD5B,OAAA;QAAQ6B,KAAK,EAAE3B,YAAa;QAAA0B,QAAA,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACjDpC,OAAA;QAAQ6B,KAAK,EAAE1B,YAAa;QAAAyB,QAAA,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eAETpC,OAAA;MAAKqC,EAAE,EAAC;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEV;AAAC/B,EAAA,CAxDMD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA0DlB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}